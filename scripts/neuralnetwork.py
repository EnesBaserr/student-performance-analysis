# -*- coding: utf-8 -*-
"""NeuralNetwork.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NyPjbkgmT8n7bcUjbob4yu6MQ6DTvUuK
"""

# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Input


data = pd.read_csv("data/student_performance_data.csv")


data.fillna(data.mean(), inplace=True)

X = data.drop('Exam_Score', axis=1)
y = data['Exam_Score']

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

model = Sequential([
    Input(shape=(X_train.shape[1],)),
    Dense(64, activation='relu'),
    Dense(32, activation='relu'),
    Dense(1)
])

model.compile(optimizer='adam', loss='mse', metrics=['mae'])

history = model.fit(X_train, y_train, epochs=50, validation_split=0.2, batch_size=32)

loss, mae = model.evaluate(X_test, y_test)
print(f"Mean Absolute Error on Test Set: {mae}")

new_data = np.array([[23, 84, -1, 1, 0, 7, 73, -1, 1, 0, -1, 0, 0, 1, 3, 0, -1, -1, 0]])

new_data_df = pd.DataFrame(new_data, columns=X.columns)

new_data_scaled = scaler.transform(new_data_df)

predicted_score = model.predict(new_data_scaled)

print(f"Predicted Exam Score: {predicted_score[0]}")